'\" t
.\"     Title: cbsqlitedump
.\"    Author: Couchbase
.\" Generator: Asciidoctor 1.5.8
.\"      Date: 2019-06-13
.\"    Manual: Backup Manual
.\"    Source: Backup 1.0.0
.\"  Language: English
.\"
.TH "CBSQLITEDUMP" "1" "2019-06-13" "Backup 1.0.0" "Backup Manual"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH "NAME"
cbsqlitedump \- A utility for dumping SQLite files generated by cbbackupmgr
.SH "SYNOPSIS"
.sp
.nf
cbsqlitedump [\-\-version] [\-\-help] [\-\-file <path>] [\-\-directory <path>]
             [\-\-info\-only] [\-\-bykey] [\-\-byseq] [\-\-no\-body] [\-\-no\-meta] [\-\-json]
.fi
.br
.SH "DESCRIPTION"
.sp
cbsqlitedump is used to dump SQLite files generated by cbbackupmgr.
.SH "OPTIONS"
.sp
\-\-version
.RS 4
Prints the cbsqlitedump suite version that the cbsqlitedump program came
from.
.RE
.sp
\-h,\-\-help
.RS 4
Prints the synopsis and usage instructions for the command.
.RE
.sp
\-f,\-\-file <path>
.RS 4
Specify the file to be dumped.
.RE
.sp
\-d,\-\-directory <path>
.RS 4
Specify the path to the directory to be dumped.
.RE
.sp
\-\-info\-only
.RS 4
Displays only information of the specified file, no documents will be dumped.
.RE
.sp
\-\-bykey
.RS 4
Sorts per table output by key. If a whole directory is dumped the output of
each table will be sorted by key.
.RE
.sp
\-\-byseq
.RS 4
Sorts per table output by sequence number. If a whole directory is dumped the output of
each table will be sorted by sequence number.
.RE
.sp
\-\-no\-body
.RS 4
Excludes the body from the dumped documents.
.RE
.sp
\-\-no\-meta
.RS 4
Excludes metadata from the dumped documents.
.RE
.sp
\-\-plain\-meta
.RS 4
Will return the metadata unpacked.
.RE
.sp
\-j,\-\-json
.RS 4
The output will be in JSON format.
.RE
.SH "FORMATS"
.sp
The default format resemebles the output of the forestdb_dump tool. A dumped
file will look like:
.sp
.if n .RS 4
.nf
Key: pymc241
  Table name: partition3
  Sequence number: 1
  Length: 7 (Key), 29 (metadata), 10 (body)
  Deleted: 0
  Meta: (hex)
  00 00 00 00 00 00 00 00 00 00 00 00 15 a5 8e 89
  7e fd 00 00 00 00 00 00 00 00 00 02 00
  Body: VTKGNKUHMP


Key: pymc533
  Table name: partition3
  Sequence number: 2
  Length: 7 (Key), 29 (metadata), 10 (body)
  Deleted: 0
  Meta: (hex)
  00 00 00 00 00 00 00 00 00 00 00 00 15 a5 8e 89
  7e fd 00 01 00 00 00 00 00 00 00 02 00
  Body: VTKGNKUHMP
.fi
.if n .RE
.sp
If the json format is chosen it will look like:
.sp
.if n .RS 4
.nf
{"seqno":1,"key":"pymc241","meta":"00000000000000000000000015a58e897efd0000000000000000000200","body":"VTKGNKUHMP"}
{"seqno":2,"key":"pymc533","meta":"00000000000000000000000015a58e897efd0001000000000000000200","body":"VTKGNKUHMP"}
.fi
.if n .RE
.SH "AUTHOR"
.sp
Couchbase